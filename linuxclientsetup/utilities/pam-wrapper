#!/bin/bash

function usage {
	echo "Usage:" >&2
	echo "	$0 <command>" >&2
	echo >&2
	echo " Options:" >&2
	echo "  --event=<pam-event>		Only execute on PAM_TYPE of <pam-event>" >&2
	echo "  --drop-privilages		Drop privilages to PAM_USER" >&2
	exit 1
}

#Get options
while (( "$#" )); do
	case "$1" in
	--event=?*)
		pam_event=${1:8}
		;;
	--drop-privilages)
		drop_priv=true
		;;
	--help)
		usage
		;;
	-*)
		echo "Unrecognised option $1" >&2
		usage
		;;
	*)
		if [[ $command ]]; then
			echo "Attempted to set command twice - $1" >&2
			usage
		fi
		command=$1
		;;
	esac
	
	shift
done

if ! [[ $command ]]; then
	echo "ERROR: No command specified" >&2
	usage
fi

#Make sure command is valid
if ! [[ -x $command ]]; then
	echo "$command is not an executable file" >&2
fi

#Needs to be root and running through PAM
if [[ $EUID -ne 0 ]]; then
	echo "ERROR: Must be run as root" >&2
	exit 1
fi
if [[ ! $PAM_USER ]]; then
	echo "ERROR: Must be run through pam_exec.so" >&2
	exit 1
fi

#Fix relative path commands
if ! which "$command" >/dev/null; then
	command=./$command
fi

#Make sure the PAM_TYPE is correct
if [[ $pam_event ]] && [[ $PAM_TYPE != $pam_event ]]; then
	exit 0
fi

#Actually run
if [[ $drop_priv ]]; then
	#Make sure the user exists
	if ! getent passwd "$PAM_USER" >/dev/null; then
		echo "ERROR: Attempted to drop privilages to a non-existent user" >&2
		exit 1
	fi
	sudo -E -n -u "$PAM_USER" "$command"
else
	"$command"
fi