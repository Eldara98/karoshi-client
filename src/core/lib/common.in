#!/bin/bash
# @makefile_in@

#Copyright (C) 2013 Robin McCorkell

#This file is part of Karoshi Client.
#
#Karoshi Client is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Client is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Client.  If not, see <http://www.gnu.org/licenses/>.

#Common functions used in multiple scripts

#ipregex
#	regex for use in matching IPs with bash regex
#function exitfunc
#	custom exiting function
#function info_alert
#	prints $2 in an information box with $1 as a title
#function persistantYad
#	uses $1 as options to yad, while also defining some defaults
#	closing window (ret 252) causes yad box to persist
#	cancelled config (ret 1) causes exit 1
#function understandableYad
#	similar to persistantYad, but defines ret 252 as cancellation
#	no persistant features
#	ret 252 and 1 causes exit 1
#function updateVariables
#	updates variables file

ipregex='^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'

function info_alert {
	yad --title="$1" --wrap --image="karoshi-smalllogo" --window-icon="karoshi-smallogo" --width=400 --button="gtk-ok" --text="$2"
}

function progress_info {
	yad --title="$1" --wrap --image="karoshi-smalllogo" --window-icon="karoshi-smalllogo" --progress --no-buttons --text="$2" --image-on-top --auto-close --geometry=400x100-40+40
}

function exitfunc {
	info_alert "Configuration" "Configuration cancelled"
	exit $1
}

function persistantYad {
	yad_status=252
	while [[ $yad_status -eq 252 ]]; do
		DATA=$(yad --wrap --image="karoshi-smalllogo" --window-icon="karoshi-smalllogo" --width=400 "$@")
		yad_status=$?
		if [[ $yad_status -eq 1 ]]; then
			exitfunc 1
		fi
		[[ $yad_status -eq 0 ]] && break
		info_alert "Warning" "You must complete the form"
	done
	return $yad_status
}

function understandableYad {
	DATA=$(yad --wrap --image="karoshi-smalllogo" --window-icon="karoshi-smalllogo" --width=400 "$@")
	yad_status=$?
	if [[ $yad_status -eq 252 ]] || [[ $yad_status -eq 1 ]]; then
		exitfunc 1
	fi
	return $yad_status
}
