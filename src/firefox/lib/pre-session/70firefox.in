#!/bin/bash
# @makefile_in@

#Copyright (C) 2013 Robin McCorkell

#This file is part of Karoshi Client.
#
#Karoshi Client is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Client is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Client.  If not, see <http://www.gnu.org/licenses/>.

source "@pkgconfdir@/variables/core"

#create user.js for default Firefox settings
if $is_domain && which firefox >/dev/null && [[ -d ~/.mozilla/firefox ]]; then
	firefox_profile=$(sed -n '0,/^Path=/s/^Path=//p' ~/.mozilla/firefox/profiles.ini)
	if [[ $firefox_profile ]] && [[ -d ~/.mozilla/firefox/$firefox_profile ]]; then
		#Apply CA certificate
		if [[ -f "@pkgstatedir@/firefox/cacert.pem" ]]; then
			certutil -A -n "Karoshi CA" -addstore root -t "CTu,CTu,CTu" -i "@pkgstatedir@/firefox/cacert.pem" -d ~/.mozilla/firefox/"$firefox_profile"
		fi

		#Default download directory
		if [[ $alternate_home ]]; then
			echo "user_pref('browser.download.lastDir', '~/$alternate_home');" > ~/.mozilla/firefox/"$firefox_profile"/user.js
		fi

		#Remove updated messages and extension checking
		firefox_version=$(firefox --version | sed 's/^[^0-9]*//')
		cat >> ~/.mozilla/firefox/"$firefox_profile"/user.js << EOF
user_pref('browser.startup.homepage_override.mstone', '$firefox_version');
user_pref('extensions.lastAppVersion', '$firefox_version');
user_pref('extensions.lastPlatformVersion', '$firefox_version');
EOF

		#Cache settings
		echo "user_pref('browser.cache.disk.capacity', 5120);" >> ~/.mozilla/firefox/"$firefox_profile"/user.js

		#Proxy server
		if [[ $PROXYSERVER ]]; then
			cat >> ~/.mozilla/firefox/"$firefox_profile"/user.js << EOF
user_pref('network.proxy.http', '$PROXYSERVER.$DNSSUFFIX');
user_pref('network.proxy.http_port', 3128);
user_pref('network.proxy.ssl', '$PROXYSERVER.$DNSSUFFIX');
user_pref('network.proxy.ssl_port', 3128);
user_pref('network.proxy.ftp', '$PROXYSERVER.$DNSSUFFIX');
user_pref('network.proxy.ftp_port', 3128);
user_pref('network.proxy.socks', '$PROXYSERVER.$DNSSUFFIX');
user_pref('network.proxy.socks_port', 3128);
user_pref('network.proxy.gopher', '$PROXYSERVER.$DNSSUFFIX');
user_pref('network.proxy.gopher_port', 3128);
user_pref('network.proxy.type', 1);
user_pref('network.proxy.no_proxies_on', 'localhost, 127.0.0.0/8, $DNSSUFFIX, $PDC');
user_pref('browser.startup.homepage', '$PROXYSERVER.$DNSSUFFIX');
EOF
		else
			#For no proxy, we want the homepage to be about:home
			echo "user_pref('browser.startup.homepage', 'about:home');" >> ~/.mozilla/firefox/"$firefox_profile"/user.js
		fi
		#Set up Kerberos
		if [[ $DOMAINTYPE == samba4 ]] || [[ $DOMAINTYPE == samba4_winbind ]]; then
			echo "user_pref('network.negotiate-auth.trusted-uris', '$DNSSUFFIX');" >> ~/.mozilla/firefox/"$firefox_profile"/user.js
		fi
	fi
fi

